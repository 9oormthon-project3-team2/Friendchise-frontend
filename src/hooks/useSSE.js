// src/hooks/useSSE.js
import { useEffect } from 'react';

const useSSE = (storeId, token, onNewNotification) => {
  useEffect(() => {
    if (!storeId || !token) {
      console.warn('‚ùå storeId ÎòêÎäî tokenÏù¥ ÏóÜÏùå, SSE Ïã§Ìñâ ÏïàÎê®');
      return;
    }

    console.log(`‚úÖ SSE Ïã§ÌñâÎê®, storeId: ${storeId}`);
    //Î∞∞Ìè¨Ïãú ÏÑúÎ≤Ñ ÏàòÏ†ï ÌïÑÏöî
    const BASE_URL = 'http://localhost:8080';
    const eventSourceUrl = `${BASE_URL}/notifications/subscribe/${storeId}?token=${encodeURIComponent(
      token,
    )}`;
    const eventSource = new EventSource(eventSourceUrl);

    eventSource.addEventListener('Promotion', (event) => {
      console.log('üì¢ Promotion Ïù¥Î≤§Ìä∏ ÏàòÏã†:', event);
      try {
        const notification = JSON.parse(event.data);
        if (!notification || !notification.title) {
          console.warn('‚ö†Ô∏è Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ ÏïåÎ¶º Îç∞Ïù¥ÌÑ∞:', notification);
          return;
        }

        // ÏÑúÎ≤ÑÏóêÏÑú Ï†ÑÎã¨Ìïú notificationIdÎ•º Ïö∞ÏÑ† ÏÇ¨Ïö©. ÏóÜÏúºÎ©¥ fallback.
        const notificationId = notification.notificationId
          ? parseInt(notification.notificationId, 10)
          : null;
        const notificationWithId = {
          id: notificationId !== null ? notificationId : Date.now(),
          ...notification,
        };

        onNewNotification(notificationWithId);
      } catch (error) {
        console.error('‚ùå ÏïåÎ¶º Îç∞Ïù¥ÌÑ∞ ÌååÏã± Ïò§Î•ò:', error);
      }
    });

    eventSource.onopen = () => {
      console.log('üü¢ SSE Ïó∞Í≤∞ ÏÑ±Í≥µ!');
    };

    eventSource.onerror = (error) => {
      console.error('‚ùå SSE Ïó∞Í≤∞ Ïò§Î•ò Î∞úÏÉù:', error);
      eventSource.close();
    };

    return () => {
      console.log('‚ùå SSE Ïó∞Í≤∞ Ìï¥Ï†ú');
      eventSource.close();
    };
  }, [storeId, token, onNewNotification]);
};

export default useSSE;
